# -*- coding: utf-8 -*-
date_issue = fields.Datetime('Release Date', required=True,
                                 help="Release(Issue) date of the book",
                                 default=lambda *a:
                                 time.strftime(DEFAULT_SERVER_DATETIME_FORMAT))
    date_return = fields.Datetime(compute="_compute_return_date",
                                  string='Return Date',
                                  store=True,
                                  help="Book To Be Return On This Date")
    actual_return_date = fields.Datetime("Actual Return Date",
                                         help="Actual Return Date of Book",
                                         default=lambda *a:
                                         time.strftime('%Y-%m-%d %H:%M:%S'))

from odoo import fields, models,api


class Rentals(models.Model):
    _name = 'library.rental'
    _description = 'Book rental'

#    _rec_name = 'Rental' 
    customer_id = fields.Many2one('library.partner', string='Customer')
    book_id = fields.Many2one('library.book', string='Book')

    rental_date = fields.Date()
    return_date = fields.Date()

    customer_address = fields.Text(related='customer_id.address')
    customer_email = fields.Char(related='customer_id.email')

    book_authors = fields.Many2many(related='book_id.author_ids')
    book_edition_date = fields.Date(related='book_id.edition_date')
    book_publisher = fields.Many2one(related='book_id.publisher_id')

    day_to_return_book = fields.Integer('Book Return Days')


    date_issue = fields.Datetime('Release Date', required=True,
                                 help="Release(Issue) date of the book",
                                 default=lambda *a:
                                 time.strftime(DEFAULT_SERVER_DATETIME_FORMAT))
    date_return = fields.Datetime(compute="_compute_return_date",
                                  string='Return Date',
                                  store=True,
                                  help="Book To Be Return On This Date")
    actual_return_date = fields.Datetime("Actual Return Date",
                                         help="Actual Return Date of Book",
                                         default=lambda *a:
                                         time.strftime('%Y-%m-%d %H:%M:%S'))



    @api.depends('book_id')
    def name_get(self):
        result = []
        for r in self:
            name = 'Rental - ' + str(r.id) + ' '  +  r.book_id.name 
            result.append((r.id, name))
        return result

    @api.depends('rental_date', 'day_to_return_book')
    def _compute_return_date(self):
        t = "%Y-%m-%d %H:%M:%S"
        for rec in self:
            diff = rd(days=rec.day_to_return_book or 0.0)
            if rec.date_issue and diff:
                ret_date = datetime.strptime(rec.date_issue, t) + diff
                rec.date_return = ret_date


